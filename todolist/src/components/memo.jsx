/**
 * 할 일 목록이 state 가 되어야 하는 이유는 저게 바뀔 때마다 ui도 바뀌므로
 * state를 담아줄 컴포넌트를 정확히 설정해야 함
 * 컴포넌트들이 만나는 곳은 맨 상위여야 함
 * 
 * 입력바와 할 일 목록을 보여주는 컴포넌트들을 다 포함하는 상위 컴포넌트에서 데이터 설정을 해줘야 데이터를 잘 관리할 수 있음
 * -> App 컴포넌트에서 데이터를 만들어줘서 state를 한 번에 관리해야 함
 * -> 상위 컴포넌트가 아닌 하위 컴포넌트에서 만들어서 올려 보내거나 하면 데이터가 꼬일 수 있음
 * 
 * 
// 이벤트 확산 -> 취소선과 삭제가 동시에 일어남
// 고유 동작 : submit, a 태그 등
// 부모로 넘어가는 것을 끊어주는 함수
// stopPropagation // 이벤트 확산 방지
// ev.prevent

// todos 컴포넌트가 바뀔 때마다 데이터를 업데이트 해야 함
// 모든 요소가 업데이트, 마운트 등을 할 때 쓰는 훅 : useEffect

useEffect : 최초에 한 번 실행
            todos 바뀔 때마다 실행

자칫하면 무한루프 돌기 때문에 순서가 중요, 최적화 해야 함

 */